buildscript {
    apply from: 'project.gradle', to: buildscript
    copy {
        from zipTree(buildscript.configurations.classpath.files.find{ it.name.contains('gradle-project-plugin')})
        into 'tmp'
        include 'gradle-scripts/**'
    }
}
apply from: 'tmp/gradle-scripts/_root.gradle'
/////////////////////////////////////////////

//noinspection GroovyUnusedAssignment
groupIdSuffix = "gradle.plugins"
//noinspection GroovyUnusedAssignment
artifactID = "yamoney-library-project-plugin"

jar {
    from(projectDir.absolutePath) {
        include "gradle-scripts/**/*"
        into "/"
    }
}

dependencies {
    compile localGroovy(),
            'org.ajoberstar:gradle-git:1.5.0',
            'ru.yandex.money.common:yamoney-doc-publishing:1.0.1',
            'net.researchgate:gradle-release:2.4.0',
            'ru.yandex.money.gradle.plugins:yamoney-check-changelog-plugin:1.0.0',
            'ru.yandex.money.gradle.plugins:yamoney-check-dependencies-plugin:2.3.0',
            'ru.yandex.money.gradle.plugins:yamoney-publish-readme-plugin:1.0.0',
            'io.spring.gradle:dependency-management-plugin:1.0.6.RELEASE'

    testCompile gradleTestKit(),
            'com.netflix.nebula:nebula-test:4.0.0'

    testCompile('org.spockframework:spock-core:1.0-groovy-2.4') {
        exclude module: 'groovy-all'
    }
}

excludedVersionConflictLibraries = {
    ['org.springframework:spring-beans',
     'com.google.guava:guava',
     'com.google.code.findbugs:jsr305',
     'com.google.guava:guava',
     'joda-time:joda-time',
     'org.ow2.asm:asm',
     'org.codehaus.plexus:plexus-utils']
}